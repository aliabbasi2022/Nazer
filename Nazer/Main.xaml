<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UI"
        xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        mc:Ignorable="d"
        x:Name="MainW" x:Class="UI.Main"
        Title="Main" Height="552.3"  Width="885.6" Closed="MainW_Closed" ScrollViewer.HorizontalScrollBarVisibility="Auto" ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen" WindowState="Maximized"  MouseLeftButtonDown="MainW_MouseLeftButtonDown" SizeChanged="MainW_SizeChanged" Foreground="Black"  Background="#FFFAFAFA" WindowStyle="ThreeDBorderWindow" Loaded="MainW_Loaded"  >
    <Window.Resources>
        <Style x:Name="ListViewTemplateHeader" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}" Value="True">
                    <Setter Property="Background" Value="Yellow" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}"/>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" CornerRadius="5,5,5,5" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" CornerRadius="5,5,5,5" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" CornerRadius="5,5,5,5">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" CornerRadius="5,5,5,5" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" CornerRadius="5,5,5,5" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="RoundCornerComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>



        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background"  Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyleHover" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>

    <Border BorderThickness="2" BorderBrush="SteelBlue" Background="White" >
        <!--<Border.BorderBrush>
            <RadialGradientBrush Center="0.5,0.5">
                <GradientStop Color="#0000FFF1" Offset="0"/>
                <GradientStop Color="#FF00FFF1" Offset="1"/>
            </RadialGradientBrush>
        </Border.BorderBrush>-->

        <Grid Background="#FFE9ECF3">

            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="MenueCol" Width="100*" MaxWidth ="220"/>
                <ColumnDefinition Width="265*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <!--Heading-->



            <!--Left Taskbar-->
            <Border Background="White" CornerRadius="10,10,10,10" Grid.Column="0" Margin="10,70,0,0" MinHeight="380" VerticalAlignment="Top">
                <StackPanel x:Name="Panel" Margin="0,10,0,0" Loaded="Panel_Loaded"  >
                    <StackPanel x:Name="Dashboard_0"  Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" MouseLeftButtonDown="TabButton_MouseLeftButtonDown" Margin="0,0.2,0,0">
                        <Image Source="Files/speedometer-tool.ico" Width="20" Height="20" VerticalAlignment="Top" Margin="10,5,0,10"/>
                        <Label Content="Dashboard" Foreground="Black" FontSize="12" VerticalAlignment="Top"  Margin="10,4,0,0"/>
                    </StackPanel>
                    <StackPanel x:Name="AppSP_1"  Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" MouseLeftButtonDown="TabButton_MouseLeftButtonDown" Margin="0,0.2,0,0">
                        <Image Source="Files/puzzle-piece-outline.ico" Width="20" Height="20" VerticalAlignment="Top" Margin="10,5,0,10"/>
                        <Label Content="Applications" Foreground="Black" FontSize="12" VerticalAlignment="Top"  Margin="10,2,0,0"/>
                    </StackPanel>
                    <StackPanel x:Name="TimeLimitSP_2"  Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" Margin="0,0.2,0,0" MouseLeftButtonDown="TabButton_MouseLeftButtonDown">
                        <Image Source="Files/circular-clock.ico" Width="20" Height="20" VerticalAlignment="Top" Margin="10,5,0,10"/>
                        <Label Content="Time Limits" Foreground="Black" FontSize="12" VerticalAlignment="Top"  Margin="10,4,0,0"/>
                    </StackPanel>
                    <StackPanel x:Name="TrackingSP_3" Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" Margin="0,0.2,0,0" MouseLeftButtonDown="TabButton_MouseLeftButtonDown">
                        <Image Source="Files/placeholder-outline-maps-interface-tool.ico" Width="20" Height="20" VerticalAlignment="Top" Margin="10,5,0,10"/>
                        <Label Content="Location" Foreground="Black" FontSize="12" VerticalAlignment="Top"  Margin="10,2,0,0"/>
                    </StackPanel>
                    <StackPanel x:Name="RunningAppsSP_4"  Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" Margin="0,0.2,0,0" MouseLeftButtonDown="TabButton_MouseLeftButtonDown">
                        <Image Source="Files/browser.png" Width="20" Height="20" VerticalAlignment="Top" Margin="10,5,0,10"/>
                        <Label Content="Running Apps" Foreground="Black" FontSize="12" VerticalAlignment="Top"  Margin="10,2,0,0"/>
                    </StackPanel>
                    <!--<StackPanel x:Name="AccountSP_5" Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" Margin="0,10,0,0" MouseLeftButtonDown="TabButton_MouseLeftButtonDown">
                    <Image Source="Files/White-User-icon.png" Width="40" Height="40" VerticalAlignment="Top" Margin="10,5,0,0"/>
                    <Label Content="Account" FontSize="25" VerticalAlignment="Top" Foreground="White" Margin="10,2,0,0"/>
                </StackPanel>-->
                    <!--<StackPanel x:Name="AboutSP_6" Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" Margin="0,10,0,0" MouseLeftButtonDown="TabButton_MouseLeftButtonDown">
                    <Image Source="Files/White-about-icon.png" Width="40" Height="40" VerticalAlignment="Top" Margin="10,5,0,0"/>
                    <Label Content="About" FontSize="25" VerticalAlignment="Top" Foreground="White" Margin="10,2,0,0"/>
                </StackPanel>-->
                    <StackPanel x:Name="AppSP_7" Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" MouseLeftButtonDown="TabButton_MouseLeftButtonDown" Margin="0,0.2,0,0">
                        <Image Source="Files/internet.png" Width="20" Height="20" VerticalAlignment="Top" Margin="10,5,0,10" Stretch="UniformToFill"/>
                        <Label Content="URLs" FontSize="12" Foreground="Black" VerticalAlignment="Top"  Margin="10,4,0,0"/>
                    </StackPanel>
                    <StackPanel x:Name="AppSP_12" Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" MouseLeftButtonDown="TabButton_MouseLeftButtonDown" Margin="0,0.2,0,0">
                        <Image Source="Files/if_keyboard_107207.ico" Width="20" Height="20" VerticalAlignment="Top" Margin="10,5,0,10" Stretch="UniformToFill"/>
                        <Label Content="Key Logs" FontSize="12" Foreground="Black" VerticalAlignment="Top"  Margin="10,4,0,0"/>
                    </StackPanel>
                    <StackPanel x:Name="AppSP_13" Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" MouseLeftButtonDown="TabButton_MouseLeftButtonDown" Margin="0,0.2,0,0">
                        <Image Source="Files/if_mic__microphone__voice__record__audio__sound__speak_2317988.ico" Width="20" Height="20" VerticalAlignment="Top" Margin="10,5,0,10" Stretch="UniformToFill"/>
                        <Label Content="Voice" FontSize="12" Foreground="Black" VerticalAlignment="Top"  Margin="10,4,0,0"/>
                    </StackPanel>
                    <StackPanel x:Name="ScreenShotSP_8" Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" Margin="0,0.2,0,0" MouseLeftButtonDown="TabButton_MouseLeftButtonDown">
                        <Image Source="Files/image.ico" Width="20" Height="20" VerticalAlignment="Top" Margin="10,5,0,10"/>
                        <Label Content="Picturs" Foreground="Black" FontSize="12" VerticalAlignment="Top"  Margin="10,2,0,0"/>
                    </StackPanel>
                    <StackPanel x:Name="NetworkSP_9" Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" Margin="0,0.2,0,0" MouseLeftButtonDown="TabButton_MouseLeftButtonDown">
                        <Image Source="Files/wifi.ico" Width="20" Height="20" VerticalAlignment="Top" Margin="10,5,0,10"/>
                        <Label Content="Network" Foreground="Black" FontSize="12" VerticalAlignment="Top"  Margin="10,2,0,0"/>
                    </StackPanel>
                    <StackPanel x:Name="RealTimeSP_10" Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" Margin="0,0.2,0,0" MouseLeftButtonDown="TabButton_MouseLeftButtonDown">
                        <Image Source="Files/video-camera.ico" Width="20" Height="20" VerticalAlignment="Top" Margin="10,5,0,10"/>
                        <Label Content="Real Time" Foreground="Black" FontSize="12" VerticalAlignment="Top" Margin="10,2,0,0"/>
                    </StackPanel>
                    <StackPanel x:Name="UninstallSP_11" Orientation="Horizontal"  VerticalAlignment="Top" MouseEnter="TabButton_MouseEnter" MouseLeave="TabButton_MouseLeave" Margin="0,0.2,0,0" MouseLeftButtonDown="TabButton_MouseLeftButtonDown">
                        <Image Source="Files/trash-can.ico" Width="20" Height="20" VerticalAlignment="Top" Margin="10,5,0,10"/>
                        <Label Content="Uninstall Child" Foreground="Black" FontSize="12" VerticalAlignment="Top"  Margin="10,4,0,0"/>
                    </StackPanel>
                </StackPanel>
            </Border>
            <Grid HorizontalAlignment="Stretch" Height="65" VerticalAlignment="Top"  Grid.ColumnSpan="2">
                <Border CornerRadius="10,10,10,10" Background="#FFDDDCDC" Margin="10,5,20,0" Height="52" >
                    <Grid>
                        <Grid.Background>
                            <ImageBrush/>
                        </Grid.Background>
                        <Button x:Name="MaxBtn" IsEnabled="False" Visibility="Hidden" VerticalAlignment="Top" HorizontalAlignment="Right" BorderBrush="{x:Null}" Width="30" Height="30" Margin="0,13,50,0" Click="Button_Click">
                            <Button.Background>
                                <ImageBrush ImageSource="Files/maximize.png"/>
                            </Button.Background>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="DarkGoldenrod"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Image Source="Files/Logo.png"  Width="50" Height="50" Margin="23,2,0,0" HorizontalAlignment="Left" Stretch="Fill"/>
                        <Button  x:Name="MBtn" VerticalAlignment="Top" HorizontalAlignment="Left" Width="25" Height="25" Margin="160,13,0,0" BorderBrush="{x:Null}" Click="Button_Click_2" Style="{DynamicResource ButtonStyleHover}" Cursor="Hand">
                            <Button.Background>
                                <ImageBrush ImageSource="Files/134216-64.png"/>
                            </Button.Background>
                        </Button>
                        <ComboBox x:Name="ChildsCombo"   Height="23" Margin="0,15,64.8,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="171" SelectionChanged="ChildsCombo_SelectionChanged" Style="{DynamicResource RoundCornerComboBox}"/>
                        <Button x:Name="SettingBtn" Height="30" Width="30" BorderThickness="0" BorderBrush="Transparent" Margin="0,11,15,0" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{DynamicResource ButtonStyleHover}" Cursor="Hand" Click="SettingBtn_Click">
                            <Button.Background>
                                <ImageBrush ImageSource="Files/BlackSetting.png"/>
                            </Button.Background>
                        </Button>
                        <ScrollViewer x:Name="SV" Visibility="Hidden" HorizontalScrollBarVisibility="Hidden"  VerticalScrollBarVisibility="Disabled">
                            <ScrollViewer.Resources>
                                <!-- Thumbs-->
                                <Style x:Key="{x:Type Thumb}" TargetType="{x:Type Thumb}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Grid x:Name="Grid">
                                                    <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                                                    <Border x:Name="Rectangle1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="5"  Background="#FF27E827" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="Tag" Value="Horizontal">
                                                        <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                                        <Setter TargetName="Rectangle1" Property="Height" Value="5" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <!--ScrollBars-->
                                <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                                    <Setter Property="Foreground" Value="LightGray" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Width" Value="10" />
                                    <Setter Property="MaxHeight" Value="10" />
                                    <Setter Property="MinHeight" Value="10" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                <Grid x:Name="GridRoot" Width="6" Background="{TemplateBinding Background}">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="0.00001*" />
                                                    </Grid.RowDefinitions>

                                                    <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                                        <Track.Thumb>
                                                            <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                                        </Track.Thumb>
                                                        <Track.IncreaseRepeatButton>
                                                            <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                                        </Track.IncreaseRepeatButton>
                                                        <Track.DecreaseRepeatButton>
                                                            <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                                        </Track.DecreaseRepeatButton>
                                                    </Track>
                                                </Grid>

                                                <ControlTemplate.Triggers>
                                                    <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                                        <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                                                    </Trigger>
                                                    <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                                        <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                                                    </Trigger>

                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                                    </Trigger>
                                                    <Trigger Property="Orientation" Value="Horizontal">
                                                        <Setter TargetName="GridRoot" Property="LayoutTransform">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="-90" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter TargetName="PART_Track" Property="LayoutTransform">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="-90" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Width" Value="Auto" />
                                                        <Setter Property="Height" Value="12" />
                                                        <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                                        <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                                        <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                            </ScrollViewer.Resources>
                            <StackPanel x:Name="ChildsSV" CanVerticallyScroll="False" Orientation="Horizontal" CanHorizontallyScroll="True">

                            </StackPanel>
                        </ScrollViewer>

                        <!--<Border x:Name="ChildListBorder" BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Height="54" Margin="231,1,0,0" VerticalAlignment="Top" MaxWidth="400" MouseEnter="Border_MouseEnter" MouseLeave="Border_MouseLeave" HorizontalAlignment="Left" Width="418">
                            
                        </Border>-->
                    </Grid>
                </Border>


            </Grid>

            <ScrollViewer Grid.Column="1" x:Name="MainScrool" Margin="0,70,0,0"  CanContentScroll="True" VerticalScrollBarVisibility="Auto" >

                <Grid x:Name="BMain" Background="#FFE9ECF3" Margin="0,0,0,0">
                    <Grid x:Name="MainDataGrid" Loaded="MainDataGrid_Loaded" Margin="0,25,0,0"/>

                </Grid>
            </ScrollViewer>

        </Grid>
    </Border>
</Window>
